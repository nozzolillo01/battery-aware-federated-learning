[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "battery-aware-fl"
version = "1.0.0"
description = "Simple framework for easily implementing a new strategy for battery-aware client selection in federated learning"
license = "Apache-2.0"
dependencies = [
    "flwr[simulation]>=1.15.2",
    "flwr-datasets[vision]>=0.5.0",
    "torch==2.6.0",
    "torchvision==0.21.0",
    "wandb>=0.15.0",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "angelo andrea nozzolillo"

[tool.flwr.app.components]
serverapp = "my_awesome_app.server_app:app"
clientapp = "my_awesome_app.client_app:app"

[tool.flwr.app.config]
# Training configuration
num-server-rounds = 10        # Number of federated learning rounds
fraction-fit = 1.0            # Fraction of clients Flower samples (used by base FedAvg)
local-epochs = 5              # Number of local training epochs per client


selection = "battery_aware"   # Client selection strategy: "random" | "battery_aware" | your custom name

# Selection parameters
sample-fraction = 0.5         # Fraction of available clients to select (0.0-1.0)

# Battery-aware specific parameters
alpha = 2.0                   # Battery weight exponent: weight = battery_level ^ alpha. Higher values = stronger preference for high-battery clients.

min-battery-threshold = 0.2   # Minimum battery level required for eligibility (0.0-1.0). Clients below this threshold are excluded from selection.

[tool.flwr.federations]
default = "small-simulation"

[tool.flwr.federations.small-simulation]
options.num-supernodes = 20

[tool.flwr.federations.medium-simulation]
options.num-supernodes = 100

[tool.flwr.federations.large-simulation]
options.num-supernodes = 200